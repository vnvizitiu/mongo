test_kind: js_test

selector:
  roots:
  - jstests/aggregation/*.js
  - jstests/aggregation/bugs/*.js
  - jstests/aggregation/expressions/*.js
  - jstests/aggregation/sources/*/*.js
  exclude_files:
  - jstests/aggregation/bugs/server18198.js # Uses a mocked mongo client to test read preference.
  - jstests/aggregation/mongos_slaveok.js # Majority read on secondary requires afterOpTime.
  - jstests/aggregation/sources/collStats/shard_host_info.js # Cannot specify write concern when
                                                             # secondaryThrottle is not set.
  - jstests/aggregation/sources/facet/use_cases.js # Cannot specify write concern when
                                                   # secondaryThrottle is not set.
  - jstests/aggregation/testSlave.js # Majority read on secondary requires afterOpTime.

executor:
  config:
    shell_options:
      global_vars:
        TestData:
          defaultReadConcernLevel: majority
          enableMajorityReadConcern: ''
      eval: "var testingReplication = true; load('jstests/libs/override_methods/set_read_and_write_concerns.js');"
      readMode: commands
  hooks:
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  - class: CheckReplOplogs
  - class: CheckReplDBHash
  - class: ValidateCollections
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      bind_ip_all: ''
      enableMajorityReadConcern: ''
      set_parameters:
        enableTestCommands: 1
        numInitialSyncAttempts: 1
    num_nodes: 2
    # Needs to be set for any ephemeral or no-journaling storage engine
    write_concern_majority_journal_default: false
